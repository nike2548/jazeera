@import "./variables.scss";

$themes: (
     white: 
     ( 
         backgroundColor: $defaultBg, 
         bgWhite:$bgWhite, 
         bgMain:$bgMain,
         bgDisable:$bgDisable, 
         textColor: $defaultTextColor, 
         borderBottom:$borderBottom, 
         iconColor:$iconColor, 
         borderColor:$border, 
         borderOne:$borderOne, 
         borderTwo:$borderTwo, 
         borderThree:$borderThree, 
         borderFour:$borderFour, 
         txtSuccess:$txtSuccess, 
         txtWarning:$txtWarning, 
         txtDanger:$txtDanger, 
         txtOrange:$txtOrange, 
         txtInfo:$txtInfo, 
         txtGray:$txtGray, 
         txtBlack:$txtBlack, 
         txtWhite:$txtWhite, 
         bgSuccess:$bgSuccess, 
         bgDanger:$bgDanger, 
         bgWarning:$bgWarning, 
         bgBlack:$bgBlack, 
         bgOrange:$bgOrange, 
         bgLightGray:$bgLightGray, 
         bgGray:$bgGray, 
         ), 
    yellow: 
         ( 
         backgroundColor: $primaryBg, 
         bgWhite:$pbgWhite,  
         bgMain:$pbgMain,
         textColor: $primaryTextColor, 
         borderBottom:$pborderBottom, 
         iconColor:$piconColor, 
         borderColor:$pborder, 
         borderOne:$pborderOne, 
         borderTwo:$pborderTwo, 
         borderThree:$pborderThree, 
         borderFour:$pborderFour, 
         txtSuccess:$ptxtSuccess, 
         txtWarning:$ptxtWarning, 
         txtDanger:$ptxtDanger, 
         txtOrange:$ptxtOrange, 
         txtInfo:$ptxtInfo, 
         txtGray:$ptxtGray, 
         txtBlack:$ptxtBlack, 
         txtWhite:$ptxtWhite, 
         bgSuccess:$pbgSuccess, 
         bgDanger:$pbgDanger, 
         bgWarning:$pbgWarning, 
         bgBlack:$pbgBlack, 
         bgOrange:$pbgOrange, 
         bgLightGray:$pbgLightGray, 
         bgGray:$pbgGray, 
         ), 
//  green: 
//         ( 
//         backgroundColor: $quaternaryBg, 
//         bgWhite:$qbgWhite, 
//         bgMain:$qbgMain,
//         textColor: $quaternaryTextColor, 
//         borderBottom:$qborderBottom, 
//         iconColor:$qiconColor, 
//         borderColor:$qborder, 
//         borderOne:$qborderOne, 
//         borderTwo:$qborderTwo, 
//         borderThree:$qborderThree, 
//         borderFour:$qborderFour, 
//         txtSuccess:$qtxtSuccess, 
//         txtWarning:$qtxtWarning, 
//         txtDanger:$qtxtDanger, 
//         txtOrange:$qtxtOrange, 
//         txtInfo:$qtxtInfo, 
//         txtGray:$qtxtGray, 
//         txtBlack:$qtxtBlack, 
//         txtWhite:$qtxtWhite, 
//         bgSuccess:$qbgSuccess, 
//         bgDanger:$qbgDanger, 
//         bgWarning:$qbgWarning, 
//         bgBlack:$qbgBlack, 
//         bgOrange:$qbgOrange, 
//         bgLightGray:$qbgLightGray, 
//         bgGray:$qbgGray, 
//         ), 
        );

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function themed($key) {
  @return map-get($theme-map, $key);
}
